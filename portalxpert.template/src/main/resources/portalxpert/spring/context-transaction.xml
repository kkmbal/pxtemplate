<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource" ref="dataSource"/>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
		    <!-- select문 인 경우 읽기전용 트랜잭션으로 선언 -->
<!-- 		    <tx:method name="select*" read-only="true" timeout="15000" /> -->
		    <!-- <tx:method name="get*"	  read-only="true" timeout="15000" /> -->
		    <tx:method name="get*"	  read-only="true" />
		    <tx:method name="select*"	  read-only="true" />
		    <tx:method name="is*"	  read-only="true" />
		    <tx:method name="code*"	  read-only="true" />
		    <tx:method name="list*"	  read-only="true" />
		    <tx:method name="next*"	  read-only="true" />
		    <tx:method name="view*"	  read-only="true" />
		    <tx:method name="*" rollback-for="Exception"/>
		    
<!-- 		    <tx:method name="find*"	  read-only="true" timeout="15000" /> -->
		    <!-- <insert, update, delete에 해당하는 트랜잭션의 경우 exception 발생할 경우 전체 Rollback 처리 수행-->			
			<!-- <tx:method name="update*" rollback-for="Exception"/>
			<tx:method name="delete*" rollback-for="Exception"/>			
			<tx:method name="insert*" rollback-for="Exception"/>			 -->
		</tx:attributes>
	</tx:advice>
    
	<aop:config>
		<!-- Tx로 끝나는 Process Class 내부 Method의 경우 프로그래밍 방식의 트랜잭션 처리 -->
		<!-- 그외 나머지 Process Class 내부 Method는 선언적 방식의 트랜잭션 처리 -->
		<aop:pointcut id="requiredTx"	expression="!execution(* portalxpert..*Service.*Tx(..)) &amp;&amp; execution(* portalxpert..*Service.*(..))"/>
		<aop:advisor advice-ref="txAdvice"	pointcut-ref="requiredTx" />
	</aop:config>
    
</beans>
